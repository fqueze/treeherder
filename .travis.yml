dist: xenial
# Use the latest Travis images since they are more up to date than the stable release.
group: edge
services:
  - docker
matrix:
  include:
    - env: js-tests
      language: node_js
      # The Node version here must be kept in sync with that in `package.json`.
      node_js: '11'
      cache:
        directories:
          - node_modules
      install:
        - yarn install --frozen-lockfile
      script:
        # `yarn build` is tested as part of the Selenium job.
        - yarn lint
        # `yarn lint` only checks the formatting of JS/JSX, this will also check CSS/HTML/JSON/Markdown/YAML.
        - yarn format:check
        - yarn test

    - env: python-linters
      language: python
      # The Python version here must be kept in sync with that in `runtime.txt` (used by Heroku/Vagrant).
      python: '3.7.2'
      cache:
        directories:
          - ${HOME}/venv
      install:
        - python -m venv ${HOME}/venv
        - ${HOME}/venv/bin/pip install -q --disable-pip-version-check --require-hashes -r requirements/common.txt
        - ${HOME}/venv/bin/pip install -q --disable-pip-version-check --require-hashes -r requirements/dev.txt
        - ${HOME}/venv/bin/pip install -q --disable-pip-version-check -r requirements/docs.txt
      script:
        # XXX: We can probably switch to docker then run ./runtests.sh and finally shellcheck
        - pip check
        - python -bb ./lints/queuelint.py
        - flake8 --show-source
        - isort --check-only --diff --quiet
        - git grep -El '^#!/.+\b(bash|sh)\b' | xargs shellcheck
        - mkdocs build

    - env: python-tests-main
      language: minimal
      install:
        # We need to build treeherder-stage:latest before we can build the testing image
        - docker-compose build backend
        - docker-compose build testing
      script:
        # Several security features in settings.py (eg setting HSTS headers) are conditional on
        # 'https://' being in the site URL. In addition, we override the test environment's debug
        # value so the tests pass. The real environment variable will be checked during deployment.
        - docker-compose run -e SITE_URL=https://treeherder.dev -e TREEHERDER_DEBUG=False testing python -bb ./manage.py check --deploy --fail-level WARNING
        # Using `-bb` mode to surface BytesWarnings: https://docs.python.org/3.7/using/cmdline.html#cmdoption-b
        - docker-compose run testing python -bb -m pytest tests/ --runslow --ignore=tests/selenium/

    - env: python-tests-selenium
      language: node_js
      # The Node version here must be kept in sync with that in `package.json`.
      node_js: '11'
      cache:
        directories:
          - node_modules
      before_install:
        # We need to build treeherder-stage:latest before we can build the testing image
        - docker-compose build backend
        - docker-compose build testing
      install:
        - yarn install
      before_script:
        # Run in `before_script` to prevent the Selenium tests from running if the UI build fails.
        - yarn build
      script:
        # Using `-bb` mode to surface BytesWarnings: https://docs.python.org/3.7/using/cmdline.html#cmdoption-b
        - docker-compose run testing python -bb -m pytest tests/selenium/

notifications:
  email:
    on_success: never
    on_failure: always
